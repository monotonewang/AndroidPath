apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
}

//groovy
configurations.all {
    resolutionStrategy.force "org.antlr:antlr4-runtime:4.7.1"
    resolutionStrategy.force "org.antlr:antlr4-tool:4.7.1"
}

//kotlin DSL
//configurations.all {
//    resolutionStrategy {
//        force("org.antlr:antlr4-runtime:4.7.1")
//        force("org.antlr:antlr4-tool:4.7.1")
//    }
//}

android {
    signingConfigs {
        realease {
            keyAlias 'test'
            if (System.console() != null) {
                storePassword System.console().readLine("\nKeyStore password: ")
            }
//            storeFile file('C:/Project/AndroidProject/sign/androidpath.jks')
            if (System.console() != null) {
                keyPassword System.console().readLine("\nKey password: ")
            }
        }
        debug {

        }
    }
    compileSdkVersion 30
    buildToolsVersion '30.0.3'
    defaultConfig {
        multiDexEnabled true
        applicationId "com.androidpath"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.realease
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }


/*    productFlavors {
        Official {}
        SanLiuLing {}
        HuaWei {}
        Baidu {}
        NineOneMarket {}
        AnzhuoShiChang {}
        YingYongBao {}
        WanDouJia {}
        Xiaomi {}
        MeiZu {}
        LeShangdian {}
        Anzhi {}
        TaoBao {}
        ZhongYiDong {}
        Others {}
    }*/

//    productFlavors.all { flavor ->
//        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
//    }

    packagingOptions {
        exclude 'AndroidManifest.xml'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude '*.apk'
//        多个jar包中的某个文件冲突
//        exclude 'META-INF/NOTICE.txt'// 这里是具体的冲突文件全路径
//        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'pom.properties'
    }


//    Android Studio 3.0前写法
//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def apk = output.outputFile
//            if (apk != null && apk.name.endsWith('.apk')) {
//                def fileName = "kangxiaobai_v${defaultConfig.versionName}_${releaseTime()}.apk"
////                def fileName = "kangxiaobai_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
//                output.outputFile = new File(apk.parent + "/package", fileName)
//            }
//        }
//    }

//    Android Studio 3.0前写法
    android.applicationVariants.all{
        variant->
            variant.outputs.all{
                outputFileName="kangxiaobai_v${defaultConfig.versionName}_${releaseTime()}.apk"
            }
    }

//替换AndroidManifest.xml的UMENG_CHANNEL_VALUE字符串为渠道名称
/*    android.applicationVariants.all{ variant ->
        variant.processManifest.doLast{
            copy{
                from("${buildDir}/manifests"){
                    include "${variant.dirName}/AndroidManifest.xml"
                }
                into("${buildDir}/manifests/$variant.name")
                filter{
                    String line -> line.replaceAll("UMENG_CHANNEL_VALUE", "$variant.name")
                }
                variant.processResources.manifestFile = file("${buildDir}/manifests/${variant.name}/${variant.dirName}/AndroidManifest.xml")
            }
        }
    }*/

    dataBinding{
        enabled = true
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0-alpha4', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation files('lib/httpclient-4.5.3.jar')
    testImplementation files('lib/commons-codec-1.9.jar')
    testImplementation files('lib/commons-logging-1.2.jar')
    testImplementation files('lib/fluent-hc-4.5.3.jar')
    testImplementation files('lib/httpclient-cache-4.5.3.jar')
    testImplementation files('lib/httpclient-win-4.5.3.jar')
    testImplementation files('lib/httpcore-4.4.6.jar')
    testImplementation files('lib/httpmime-4.5.3.jar')
    testImplementation files('lib/jna-4.1.0.jar')
    testImplementation files('lib/jna-platform-4.1.0.jar')
    implementation 'com.alibaba:fastjson:1.1.64.android'
//    implementation "com.android.support:support-compat:28.0.3"
    implementation 'junit:junit:4.13.1'
    // https://mvnrepository.com/artifact/com.google.android.material/material
    implementation 'com.google.android.material:material:1.2.1'
    // https://mvnrepository.com/artifact/androidx.cardview/cardview
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.jakewharton:butterknife:10.1.0'

    kapt 'com.jakewharton:butterknife-compiler:10.1.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'

    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.3'//没有使用特殊Header，可以不加这行

    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'com.android.support:multidex:1.0.3'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.fragment:fragment:1.2.0'
    //2019-05-30 从jre移到jdk
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:1.2.71"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.10"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:1.3.72"
//    https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
//    https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    //https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/adapter-rxjava2
//    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
//    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
//    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
// https://mvnrepository.com/artifact/com.squareup.retrofit2/adapter-rxjava3
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/logging-interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'
//    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
//    https://github.com/ReactiveX/RxKotlin
//    implementation("io.reactivex.rxjava2:rxkotlin:2.3.0")
//    https://mvnrepository.com/artifact/io.reactivex.rxjava3/rxkotlin
    implementation("io.reactivex.rxjava3:rxkotlin:3.0.0")
//    https://github.com/ReactiveX/RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"
    implementation "io.reactivex.rxjava3:rxjava:3.0.5"
//    https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    //https://mvnrepository.com/artifact/androidx.recyclerview/recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    //https://github.com/CymChad/BaseRecyclerViewAdapterHelper/blob/master/readme/0-BaseRecyclerViewAdapterHelper.md
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    //https://mvnrepository.com/artifact/androidx.swiperefreshlayout/swiperefreshlayout
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    //https://mvnrepository.com/artifact/androidx.viewpager/viewpager
//    implementation 'androidx.viewpager:viewpager:1.0.0'
    // https://mvnrepository.com/artifact/androidx.viewpager2/viewpager2
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'cn.bingoogolapple:bga-banner:2.2.4@aar'
    implementation 'com.just.agentweb:agentweb:4.0.2'
//    implementation 'com.google.android.exoplayer:exoplayer:2.12.1'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.12.1'
    //room
//    annotationProcessor 'androidx.room:room-compiler:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'
    implementation 'androidx.room:room-runtime:2.2.5'
    implementation "androidx.room:room-ktx:2.2.5"
    implementation "androidx.room:room-rxjava2:2.2.5"
    // https://mvnrepository.com/artifact/androidx.room/room-rxjava3
//    compile group: 'androidx.room', name: 'room-rxjava3', version: '2.3.0-alpha02'
//    implementation 'org.antlr:antlr4-runtime:4.7.1'

    def work_version = "2.5.0"
    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"
    // optional - GCMNetworkManager support 兼容android22以下
    implementation "androidx.work:work-gcm:$work_version"
    // optional - Multiprocess support
    implementation "androidx.work:work-multiprocess:$work_version"


}

